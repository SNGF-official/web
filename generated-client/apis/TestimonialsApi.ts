/* tslint:disable */
/* eslint-disable */
/**
 * SNGF API
 * API for managing plants, seeds, events, blogs, testimonials, and orders for the SNGF website
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Testimonial,
} from '../models/index';
import {
    TestimonialFromJSON,
    TestimonialToJSON,
} from '../models/index';

export interface CrupdateTestimonialRequest {
    id: number;
    testimonial: Omit<Testimonial, 'id'>;
}

export interface GetTestimonialListRequest {
    status?: GetTestimonialListStatusEnum;
    operatorId?: number;
}

/**
 * 
 */
export class TestimonialsApi extends runtime.BaseAPI {

    /**
     * Update a testimonial\'s status or content.
     * Update a testimonial
     */
    async crupdateTestimonialRaw(requestParameters: CrupdateTestimonialRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling crupdateTestimonial().'
            );
        }

        if (requestParameters['testimonial'] == null) {
            throw new runtime.RequiredError(
                'testimonial',
                'Required parameter "testimonial" was null or undefined when calling crupdateTestimonial().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/testimonials/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: TestimonialToJSON(requestParameters['testimonial']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Update a testimonial\'s status or content.
     * Update a testimonial
     */
    async crupdateTestimonial(requestParameters: CrupdateTestimonialRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.crupdateTestimonialRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieve all active testimonials.
     * Get list of testimonials
     */
    async getTestimonialListRaw(requestParameters: GetTestimonialListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Testimonial>>> {
        const queryParameters: any = {};

        if (requestParameters['status'] != null) {
            queryParameters['status'] = requestParameters['status'];
        }

        if (requestParameters['operatorId'] != null) {
            queryParameters['operator_id'] = requestParameters['operatorId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/testimonials/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TestimonialFromJSON));
    }

    /**
     * Retrieve all active testimonials.
     * Get list of testimonials
     */
    async getTestimonialList(requestParameters: GetTestimonialListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Testimonial>> {
        const response = await this.getTestimonialListRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const GetTestimonialListStatusEnum = {
    Active: 'ACTIVE',
    Inactive: 'INACTIVE'
} as const;
export type GetTestimonialListStatusEnum = typeof GetTestimonialListStatusEnum[keyof typeof GetTestimonialListStatusEnum];
