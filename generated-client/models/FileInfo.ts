/* tslint:disable */
/* eslint-disable */
/**
 * SNGF API
 * API for managing plants, seeds, events, blogs, testimonials, and orders for the SNGF website
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FileInfo
 */
export interface FileInfo {
    /**
     * 
     * @type {string}
     * @memberof FileInfo
     */
    id: string;
    /**
     * name without extension
     * @type {string}
     * @memberof FileInfo
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof FileInfo
     */
    type: string;
    /**
     * 
     * @type {Date}
     * @memberof FileInfo
     */
    createdAt?: Date;
    /**
     * url to the file
     * @type {string}
     * @memberof FileInfo
     */
    fileToUpload?: string;
}

/**
 * Check if a given object implements the FileInfo interface.
 */
export function instanceOfFileInfo(value: object): value is FileInfo {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function FileInfoFromJSON(json: any): FileInfo {
    return FileInfoFromJSONTyped(json, false);
}

export function FileInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'type': json['type'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'fileToUpload': json['fileToUpload'] == null ? undefined : json['fileToUpload'],
    };
}

export function FileInfoToJSON(json: any): FileInfo {
    return FileInfoToJSONTyped(json, false);
}

export function FileInfoToJSONTyped(value?: FileInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'type': value['type'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'fileToUpload': value['fileToUpload'],
    };
}

