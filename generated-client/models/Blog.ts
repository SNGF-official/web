/* tslint:disable */
/* eslint-disable */
/**
 * SNGF API
 * API for managing plants, seeds, events, blogs, testimonials, and orders for the SNGF website
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Blog
 */
export interface Blog {
    /**
     * 
     * @type {number}
     * @memberof Blog
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof Blog
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Blog
     */
    content: string;
    /**
     * 
     * @type {string}
     * @memberof Blog
     */
    author?: string;
    /**
     * 
     * @type {Date}
     * @memberof Blog
     */
    publishedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Blog
     */
    status: BlogStatusEnum;
}


/**
 * @export
 */
export const BlogStatusEnum = {
    Active: 'ACTIVE',
    Inactive: 'INACTIVE'
} as const;
export type BlogStatusEnum = typeof BlogStatusEnum[keyof typeof BlogStatusEnum];


/**
 * Check if a given object implements the Blog interface.
 */
export function instanceOfBlog(value: object): value is Blog {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function BlogFromJSON(json: any): Blog {
    return BlogFromJSONTyped(json, false);
}

export function BlogFromJSONTyped(json: any, ignoreDiscriminator: boolean): Blog {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'content': json['content'],
        'author': json['author'] == null ? undefined : json['author'],
        'publishedAt': json['published_at'] == null ? undefined : (new Date(json['published_at'])),
        'status': json['status'],
    };
}

export function BlogToJSON(json: any): Blog {
    return BlogToJSONTyped(json, false);
}

export function BlogToJSONTyped(value?: Omit<Blog, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'content': value['content'],
        'author': value['author'],
        'published_at': value['publishedAt'] == null ? undefined : ((value['publishedAt']).toISOString()),
        'status': value['status'],
    };
}

