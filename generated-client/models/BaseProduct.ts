/* tslint:disable */
/* eslint-disable */
/**
 * SNGF API
 * API for managing plants, seeds, events, blogs, testimonials, and orders for the SNGF website
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Image } from './Image';
import {
    ImageFromJSON,
    ImageFromJSONTyped,
    ImageToJSON,
    ImageToJSONTyped,
} from './Image';

/**
 * 
 * @export
 * @interface BaseProduct
 */
export interface BaseProduct {
    /**
     * 
     * @type {string}
     * @memberof BaseProduct
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof BaseProduct
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof BaseProduct
     */
    category?: BaseProductCategoryEnum;
    /**
     * 
     * @type {string}
     * @memberof BaseProduct
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof BaseProduct
     */
    quantity?: number;
    /**
     * 
     * @type {string}
     * @memberof BaseProduct
     */
    status: BaseProductStatusEnum;
    /**
     * Liste des images associ√©es
     * @type {Array<Image>}
     * @memberof BaseProduct
     */
    images?: Array<Image>;
}


/**
 * @export
 */
export const BaseProductCategoryEnum = {
    Agroforestieres: 'AGROFORESTIERES',
    EndemiquesAutochtones: 'ENDEMIQUES_AUTOCHTONES',
    ExotiquesReboisement: 'EXOTIQUES_REBOISEMENT',
    Ornementales: 'ORNEMENTALES',
    Embroussaillements: 'EMBROUSSAILLEMENTS'
} as const;
export type BaseProductCategoryEnum = typeof BaseProductCategoryEnum[keyof typeof BaseProductCategoryEnum];

/**
 * @export
 */
export const BaseProductStatusEnum = {
    Active: 'ACTIVE',
    Inactive: 'INACTIVE'
} as const;
export type BaseProductStatusEnum = typeof BaseProductStatusEnum[keyof typeof BaseProductStatusEnum];


/**
 * Check if a given object implements the BaseProduct interface.
 */
export function instanceOfBaseProduct(value: object): value is BaseProduct {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function BaseProductFromJSON(json: any): BaseProduct {
    return BaseProductFromJSONTyped(json, false);
}

export function BaseProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseProduct {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'category': json['category'] == null ? undefined : json['category'],
        'description': json['description'] == null ? undefined : json['description'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'status': json['status'],
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ImageFromJSON)),
    };
}

export function BaseProductToJSON(json: any): BaseProduct {
    return BaseProductToJSONTyped(json, false);
}

export function BaseProductToJSONTyped(value?: BaseProduct | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'category': value['category'],
        'description': value['description'],
        'quantity': value['quantity'],
        'status': value['status'],
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ImageToJSON)),
    };
}

