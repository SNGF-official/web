/* tslint:disable */
/* eslint-disable */
/**
 * SNGF API
 * API for managing plants, seeds, events, blogs, testimonials, and orders for the SNGF website
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Image } from './Image';
import {
    ImageFromJSON,
    ImageFromJSONTyped,
    ImageToJSON,
    ImageToJSONTyped,
} from './Image';

/**
 * 
 * @export
 * @interface Seed
 */
export interface Seed {
    /**
     * 
     * @type {number}
     * @memberof Seed
     */
    pricePerKilo: number;
    /**
     * 
     * @type {string}
     * @memberof Seed
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Seed
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Seed
     */
    category?: SeedCategoryEnum;
    /**
     * 
     * @type {string}
     * @memberof Seed
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof Seed
     */
    quantity?: number;
    /**
     * 
     * @type {string}
     * @memberof Seed
     */
    status: SeedStatusEnum;
    /**
     * Liste des images associ√©es
     * @type {Array<Image>}
     * @memberof Seed
     */
    images?: Array<Image>;
}


/**
 * @export
 */
export const SeedCategoryEnum = {
    Agroforestieres: 'AGROFORESTIERES',
    EndemiquesAutochtones: 'ENDEMIQUES_AUTOCHTONES',
    ExotiquesReboisement: 'EXOTIQUES_REBOISEMENT',
    Ornementales: 'ORNEMENTALES',
    Embroussaillements: 'EMBROUSSAILLEMENTS'
} as const;
export type SeedCategoryEnum = typeof SeedCategoryEnum[keyof typeof SeedCategoryEnum];

/**
 * @export
 */
export const SeedStatusEnum = {
    Active: 'ACTIVE',
    Inactive: 'INACTIVE'
} as const;
export type SeedStatusEnum = typeof SeedStatusEnum[keyof typeof SeedStatusEnum];


/**
 * Check if a given object implements the Seed interface.
 */
export function instanceOfSeed(value: object): value is Seed {
    if (!('pricePerKilo' in value) || value['pricePerKilo'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function SeedFromJSON(json: any): Seed {
    return SeedFromJSONTyped(json, false);
}

export function SeedFromJSONTyped(json: any, ignoreDiscriminator: boolean): Seed {
    if (json == null) {
        return json;
    }
    return {
        
        'pricePerKilo': json['pricePerKilo'],
        'id': json['id'],
        'name': json['name'],
        'category': json['category'] == null ? undefined : json['category'],
        'description': json['description'] == null ? undefined : json['description'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'status': json['status'],
        'images': json['images'] == null ? undefined : ((json['images'] as Array<any>).map(ImageFromJSON)),
    };
}

export function SeedToJSON(json: any): Seed {
    return SeedToJSONTyped(json, false);
}

export function SeedToJSONTyped(value?: Seed | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pricePerKilo': value['pricePerKilo'],
        'id': value['id'],
        'name': value['name'],
        'category': value['category'],
        'description': value['description'],
        'quantity': value['quantity'],
        'status': value['status'],
        'images': value['images'] == null ? undefined : ((value['images'] as Array<any>).map(ImageToJSON)),
    };
}

