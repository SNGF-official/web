/* tslint:disable */
/* eslint-disable */
/**
 * SNGF API
 * API for managing plants, seeds, events, blogs, testimonials, and orders for the SNGF website
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Testimonial
 */
export interface Testimonial {
    /**
     * 
     * @type {number}
     * @memberof Testimonial
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof Testimonial
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Testimonial
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof Testimonial
     */
    imageUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof Testimonial
     */
    status: TestimonialStatusEnum;
}


/**
 * @export
 */
export const TestimonialStatusEnum = {
    Active: 'ACTIVE',
    Inactive: 'INACTIVE'
} as const;
export type TestimonialStatusEnum = typeof TestimonialStatusEnum[keyof typeof TestimonialStatusEnum];


/**
 * Check if a given object implements the Testimonial interface.
 */
export function instanceOfTestimonial(value: object): value is Testimonial {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function TestimonialFromJSON(json: any): Testimonial {
    return TestimonialFromJSONTyped(json, false);
}

export function TestimonialFromJSONTyped(json: any, ignoreDiscriminator: boolean): Testimonial {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'message': json['message'],
        'imageUrl': json['image_url'] == null ? undefined : json['image_url'],
        'status': json['status'],
    };
}

export function TestimonialToJSON(json: any): Testimonial {
    return TestimonialToJSONTyped(json, false);
}

export function TestimonialToJSONTyped(value?: Omit<Testimonial, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'message': value['message'],
        'image_url': value['imageUrl'],
        'status': value['status'],
    };
}

